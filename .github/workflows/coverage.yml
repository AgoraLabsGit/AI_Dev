name: Test Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: vibe-lab-product/package-lock.json
    
    - name: Install dependencies
      run: |
        cd vibe-lab-product
        npm ci
    
    - name: Install coverage tools
      run: |
        cd vibe-lab-product
        npm install --save-dev nyc @types/nyc
    
    - name: Run tests with coverage
      run: |
        cd vibe-lab-product
        npx nyc --reporter=text --reporter=lcov npm run test:all || true
      env:
        NODE_ENV: test
    
    - name: Generate coverage report
      if: always()
      run: |
        cd vibe-lab-product
        echo "## Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        cat coverage/lcov-report/index.html | grep -A 20 "percentage" || echo "Coverage data pending" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./vibe-lab-product/coverage
        fail_ci_if_error: false
        verbose: true
    
    - name: Comment PR with coverage
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const message = `### ðŸ“Š Test Coverage Report
          
          Coverage analysis complete. Target: 85%+
          
          View detailed report in the Actions summary.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          }); 