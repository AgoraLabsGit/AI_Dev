# AI Collaboration System Configuration
# Defines roles, responsibilities, and automation settings for Gemini-Claude collaboration

system:
  version: "1.0.0"
  last_updated: "2025-01-27"
  mode: "development"  # development | staging | production

roles:
  gemini:
    title: "Lead Developer"
    responsibilities:
      - "Feature implementation and code development"
      - "Task execution from project roadmap"
      - "Automated progress updates via git commits"
      - "Code generation and testing"
      - "Technical problem solving and debugging"
    
    authority:
      - "Technical implementation decisions within established patterns"
      - "Code structure and organization"
      - "Performance optimization"
      - "Library selection within project constraints"
      - "Testing strategy implementation"
    
    communication:
      frequency: "continuous"
      methods: ["git_commits", "task_updates", "direct_messages"]
      escalation_triggers:
        - "architectural_decision_required"
        - "blocked_more_than_4h"
        - "quality_gate_failure"
        - "security_concern"
    
    success_metrics:
      - "tasks_completed_per_day: 2-4"
      - "commit_frequency: 4-8_per_day"
      - "test_coverage: >80%"
      - "code_quality_score: >8.0"

  claude:
    title: "Project Manager & Code Auditor"
    responsibilities:
      - "Project oversight and timeline management"
      - "Code review and quality assurance"
      - "Architecture governance and standards"
      - "Risk management and escalation"
      - "Stakeholder communication"
    
    authority:
      - "Project direction and priority adjustment"
      - "Quality standards enforcement"
      - "Architectural decision approval"
      - "Release readiness determination"
      - "Resource allocation optimization"
    
    communication:
      frequency: "scheduled_and_triggered"
      methods: ["code_reviews", "daily_reports", "escalation_alerts"]
      review_triggers:
        - "significant_commit"
        - "feature_completion"
        - "merge_request"
        - "daily_standup"
    
    success_metrics:
      - "review_completion_time: <2h"
      - "escalation_accuracy: >90%"
      - "quality_gate_effectiveness: >95%"
      - "project_health_monitoring: daily"

workflows:
  daily_sync:
    time: "09:00"  # UTC
    enabled: true
    steps:
      - "generate_status_report"
      - "assign_gemini_tasks"
      - "identify_claude_priorities"
      - "update_collaboration_state"
      - "send_notifications"
    
    outputs:
      - "gemini_daily_instructions.md"
      - "claude_daily_instructions.md"
      - "daily_sync.json"

  code_review:
    triggers:
      - "commit_with_feat_tag"
      - "merge_request_created"
      - "manual_review_request"
    
    automated_checks:
      - "eslint_validation"
      - "typescript_compilation"
      - "test_suite_execution"
      - "security_scan"
      - "performance_analysis"
    
    review_criteria:
      code_quality:
        weight: 30
        factors: ["readability", "maintainability", "standards_compliance"]
      security:
        weight: 25
        factors: ["auth_checks", "data_validation", "access_control"]
      performance:
        weight: 20
        factors: ["bundle_size", "runtime_performance", "caching"]
      architecture:
        weight: 15
        factors: ["pattern_consistency", "separation_of_concerns", "scalability"]
      testing:
        weight: 10
        factors: ["coverage", "quality", "regression_prevention"]
    
    thresholds:
      auto_approve: 8.5
      requires_changes: 6.0
      escalate_to_human: 4.0

  sprint_planning:
    frequency: "weekly"
    day: "monday"
    time: "10:00"
    duration: "30_minutes"
    
    activities:
      - "analyze_previous_sprint_velocity"
      - "adjust_priorities_based_on_progress"
      - "identify_dependencies_and_blockers"
      - "generate_weekly_task_assignments"
      - "update_project_timeline"

quality_gates:
  pre_commit:
    enabled: true
    checks:
      - "lint_check"
      - "type_check"
      - "basic_security_scan"
    auto_fix: true
    
  post_commit:
    enabled: true
    checks:
      - "test_execution"
      - "build_verification"
      - "task_status_update"
    
  pre_merge:
    enabled: true
    checks:
      - "comprehensive_review"
      - "integration_tests"
      - "performance_validation"
    requires_approval: true
    
  pre_deploy:
    enabled: true
    checks:
      - "e2e_tests"
      - "security_audit"
      - "performance_benchmarks"
    requires_human_approval: true

automation:
  task_assignment:
    enabled: true
    algorithm: "priority_and_dependency_based"
    max_concurrent_tasks: 3
    
  progress_tracking:
    enabled: true
    method: "git_commit_analysis"
    update_frequency: "real_time"
    
  escalation_detection:
    enabled: true
    criteria:
      blocked_task_duration: "24h"
      failed_quality_gates: 3
      review_pending_duration: "48h"
      
  notifications:
    slack:
      enabled: false  # Configure when available
      webhook_url: ""
    email:
      enabled: false  # Configure when available
      recipients: []

integration:
  taskmaster:
    enabled: true
    api_endpoint: "http://localhost:3000/api/v1"
    auto_update: true
    
  git:
    enabled: true
    hooks:
      pre_commit: true
      post_commit: true
      pre_push: true
    
  github:
    enabled: false  # Configure when needed
    auto_pr_creation: false
    
  testing:
    framework: "jest_and_playwright"
    auto_run: true
    coverage_threshold: 80

monitoring:
  health_checks:
    frequency: "hourly"
    metrics:
      - "task_completion_rate"
      - "code_quality_trends"
      - "collaboration_effectiveness"
      - "escalation_frequency"
  
  alerts:
    project_health_below: 0.6
    escalation_threshold: 3
    review_backlog_size: 5
    
  reporting:
    daily_summary: true
    weekly_deep_dive: true
    monthly_metrics: true

learning:
  enabled: true
  retention_period: "6_months"
  
  pattern_recognition:
    successful_implementations: true
    failed_approaches: true
    review_feedback_trends: true
    
  adaptation:
    quality_criteria_adjustment: true
    process_optimization: true
    role_boundary_refinement: true

security:
  code_scanning:
    enabled: true
    tools: ["eslint_security", "npm_audit"]
    
  access_control:
    gemini_permissions:
      - "read_codebase"
      - "write_code"
      - "run_tests"
      - "update_tasks"
    
    claude_permissions:
      - "read_codebase"
      - "review_code"
      - "approve_merges"
      - "escalate_issues"
      - "manage_project_state"
  
  sensitive_data:
    protection_enabled: true
    scan_commits: true
    prevent_exposure: true

performance:
  response_times:
    ai_to_ai_communication: "< 1h"
    code_review_completion: "< 2h"
    task_assignment: "< 5min"
    escalation_response: "< 30min"
  
  optimization:
    parallel_processing: true
    caching_enabled: true
    batch_operations: true
  
  scaling:
    max_concurrent_reviews: 5
    max_daily_tasks: 20
    queue_management: "priority_based"

# Environment-specific overrides
environments:
  development:
    automation.escalation_detection.criteria.blocked_task_duration: "4h"
    quality_gates.pre_deploy.requires_human_approval: false
    monitoring.health_checks.frequency: "every_30min"
  
  staging:
    quality_gates.pre_deploy.requires_human_approval: true
    monitoring.alerts.project_health_below: 0.7
  
  production:
    automation.task_assignment.max_concurrent_tasks: 2
    quality_gates.pre_merge.requires_approval: true
    monitoring.alerts.escalation_threshold: 1